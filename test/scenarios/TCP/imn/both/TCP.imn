node n1 {
    type router
    model PC
    network-config {
	hostname n1
	!
	interface eth0
	 ip address 10.0.0.20/24
	!
    }
    canvas c1
    iconcoords {236.0 311.0}
    labelcoords {236.0 343.0}
    custom-config {
	custom-config-id service:UserDefined
	custom-command UserDefined
	config {
	files=('TCPclient.sh', )
	cmdup=('sh TCPclient.sh', )
	starttime=1
	}
    }
    custom-config {
	custom-config-id service:UserDefined:TCPclient.sh
	custom-command TCPclient.sh
	config {
	file:///root/scenario/TCP/scripts/TCPclient.sh
	}
    }
    services {DefaultRoute UserDefined}
    interface-peer {eth0 n2}
}

node n3 {
    type router
    model host
    network-config {
	hostname n3
	!
	interface eth0
	 ip address 10.0.0.10/24
	!
    }
    canvas c1
    iconcoords {696.0 307.0}
    labelcoords {696.0 339.0}
    custom-config {
	custom-config-id service:UserDefined
	custom-command UserDefined
	config {
	files=('TCPserver.sh', )
	cmdup=('sh TCPserver.sh', )
	}
    }
    custom-config {
	custom-config-id service:UserDefined:TCPserver.sh
	custom-command TCPserver.sh
	config {
	file:///root/scenario/TCP/scripts/TCPserver.sh
	}
    }
    services {UserDefined}
    interface-peer {eth0 n2}
}

node n2 {
    type lanswitch
    network-config {
	hostname n2
	!
    }
    canvas c1
    iconcoords {452.0 159.0}
    labelcoords {452.0 183.0}
    interface-peer {e0 n1}
    interface-peer {e1 n3}
}

link l1 {
    nodes {n1 n2}
    bandwidth 0
}

link l2 {
    nodes {n2 n3}
    bandwidth 0
}

canvas c1 {
    name {Canvas1}
}

option global {
    interface_names no
    ip_addresses yes
    ipv6_addresses yes
    node_labels yes
    link_labels yes
    show_api no
    background_images no
    annotations yes
    grid yes
    traffic_start 0
}

option session {
}

