node n2 {
    type router
    model PC
    network-config {
	hostname n2
	!
	interface eth0
	!
    }
    canvas c1
    iconcoords {235.0 236.0}
    labelcoords {235.0 268.0}
    custom-config {
	custom-config-id service:UserDefined
	custom-command UserDefined
	config {
	files=('DHCPclient.sh', )
	cmdup=('sh DHCPclient.sh', )
	starttime=0
	}
    }
    custom-config {
	custom-config-id service:UserDefined:DHCPclient.sh
	custom-command DHCPclient.sh
	config {
	file:///root/scenario/DHCP/scripts/DHCPclient.sh
	}
    }
    custom-config {
	custom-config-id service:DHCPClient
	custom-command DHCPClient
	config {
	files=('startdhcpclient.sh', )
	startidx=50
	starttime=1
	}
    }
    custom-config {
	custom-config-id service:DHCPClient:startdhcpclient.sh
	custom-command startdhcpclient.sh
	config {
	#!/bin/sh
	# auto-generated by DHCPClient service (utility.py)
	# uncomment this mkdir line and symlink line to enable client-side DNS
	# resolution based on the DHCP server response.
	#mkdir -p /var/run/resolvconf/interface
	#ln -s /var/run/resolvconf/interface/eth0.dhclient /var/run/resolvconf/resolv.conf
	/sbin/dhclient -nw -pf /var/run/dhclient-eth0.pid -lf /var/run/dhclient-eth0.lease eth0
	
	}
    }
    services {DefaultRoute DHCPClient UserDefined}
    interface-peer {eth0 n1}
}

node n3 {
    type router
    model host
    network-config {
	hostname n3
	!
	interface eth0
	 ip address 192.168.0.2/24
	!
    }
    canvas c1
    iconcoords {640.0 245.0}
    labelcoords {640.0 277.0}
    services {DefaultRoute DHCP UserDefined}
    custom-config {
	custom-config-id service:UserDefined
	custom-command UserDefined
	config {
	files=('DHCPserver.sh', )
	cmdup=('sh DHCPserver.sh', )
	}
    }
    custom-config {
	custom-config-id service:UserDefined:DHCPserver.sh
	custom-command DHCPserver.sh
	config {
	file:///root/scenario/DHCP/scripts/DHCPserver.sh
	}
    }
    custom-config {
	custom-config-id service:DHCP
	custom-command DHCP
	config {
	files=('/etc/dhcp/dhcpd.conf', )
	startidx=50
	cmdup=('udhcpd', )
	}
    }
    custom-config {
	custom-config-id service:DHCP:/etc/dhcp/dhcpd.conf
	custom-command /etc/dhcp/dhcpd.conf
	config {
	# auto-generated by DHCP service (utility.py)
	# NOTE: move these option lines into the desired pool { } block(s) below
	#option domain-name "test.com";
	#option domain-name-servers 10.0.0.1;
	#option routers 10.0.0.1;
	
	log-facility local6;
	
	default-lease-time 600;
	max-lease-time 7200;
	
	ddns-update-style none;
	
	subnet 192.168.0.0 netmask 255.255.255.0 {
	  pool {
	    range 192.168.0.127 192.168.0.254;
	    default-lease-time 600;
	    option domain-name-servers 192.168.0.2;
	    option routers 192.168.0.1
	  }
	}
	
	
	}
    }
    interface-peer {eth0 n1}
}

node n4 {
    type router
    model router
    network-config {
	hostname n4
	!
	interface eth0
	 ip address 192.168.0.1/24
	!
    }
    canvas c1
    iconcoords {463.0 51.0}
    labelcoords {463.0 83.0}
    interface-peer {eth0 n1}
}

node n1 {
    type lanswitch
    network-config {
	hostname n1
	!
    }
    canvas c1
    iconcoords {455.0 216.0}
    labelcoords {455.0 240.0}
    interface-peer {e0 n4}
    interface-peer {e1 n3}
    interface-peer {e2 n2}
}

link l1 {
    nodes {n1 n4}
    bandwidth 0
}

link l2 {
    nodes {n1 n3}
    bandwidth 0
}

link l3 {
    nodes {n2 n1}
    bandwidth 0
}

canvas c1 {
    name {Canvas1}
}

option global {
    interface_names no
    ip_addresses yes
    ipv6_addresses yes
    node_labels yes
    link_labels yes
    show_api no
    background_images no
    annotations yes
    grid yes
    traffic_start 0
}

option session {
}

