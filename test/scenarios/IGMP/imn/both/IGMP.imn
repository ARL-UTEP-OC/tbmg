node n1 {
    type router
    model PC
    network-config {
	hostname n1
	!
	interface eth0
	 ip address 10.0.0.20/24
	!
    }
    canvas c1
    iconcoords {242.0 314.0}
    labelcoords {242.0 346.0}
    interface-peer {eth0 n2}
    services {DefaultRoute UserDefined}
    custom-config {
	custom-config-id service:UserDefined
	custom-command UserDefined
	config {
	files=('IGMPclient.sh', 'test1.mgn', )
	cmdup=('sh IGMPclient.sh', )
	starttime=1
	}
    }
    custom-config {
	custom-config-id service:UserDefined:test1.mgn
	custom-command test1.mgn
	config {
	file:///root/scenario/IGMP/scripts/client.mgn
	}
    }
    custom-config {
	custom-config-id service:UserDefined:IGMPclient.sh
	custom-command IGMPclient.sh
	config {
	#!/bin/bash
	tshark -i eth0 -w ~/scenario/IGMP/imn/both/client.pcap&
	sleep 1
	ip route add 224.225.1/24 dev eth0
	while true; do mgen input test1.mgn; sleep 8; done
	
	
	}
    }
}

node n2 {
    type lanswitch
    network-config {
	hostname n2
	!
    }
    canvas c1
    iconcoords {465.0 157.0}
    labelcoords {465.0 181.0}
    interface-peer {e0 n1}
    interface-peer {e1 n3}
}

node n3 {
    type router
    model host
    network-config {
	hostname n3
	!
	interface eth0
	 ip address 10.0.0.10/24
	!
    }
    canvas c1
    iconcoords {672.0 305.0}
    labelcoords {672.0 337.0}
    interface-peer {eth0 n2}
    custom-config {
	custom-config-id service:UserDefined
	custom-command UserDefined
	config {
	files=('IGMPserver.sh', 'test2.mgn', )
	cmdup=('sh IGMPserver.sh', )
	}
    }
    custom-config {
	custom-config-id service:UserDefined:test2.mgn
	custom-command test2.mgn
	config {
	file:///root/scenario/IGMP/scripts/server.mgn
	}
    }
    custom-config {
	custom-config-id service:UserDefined:IGMPserver.sh
	custom-command IGMPserver.sh
	config {
	#!/bin/bash
	tshark -i eth0 -w ~/scenario/IGMP/imn/both/server.pcap&
	sleep 1
	ip route add 224.225.1/24 dev eth0
	mgen input test2.mgn
	
	}
    }
    custom-config {
	custom-config-id service:HTTP
	custom-command HTTP
	config {
	dirs=('/etc/apache2', '/var/run/apache2', '/var/log/apache2', '/var/lock/apache2', '/var/www', '/run/lock', )
	startidx=50
	starttime=1
	}
    }
    services {DefaultRoute UserDefined}
}

link l1 {
    nodes {n1 n2}
    bandwidth 0
}

link l2 {
    nodes {n2 n3}
    bandwidth 0
}

canvas c1 {
    name {Canvas1}
}

option global {
    interface_names no
    ip_addresses yes
    ipv6_addresses yes
    node_labels yes
    link_labels yes
    show_api no
    background_images no
    annotations yes
    grid yes
    traffic_start 0
}

option session {
}

