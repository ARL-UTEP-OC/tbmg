node n1 {
    type router
    model PC
    network-config {
	hostname n1
	!
	interface eth0
	 ip address 10.0.0.20/24
	!
    }
    canvas c1
    iconcoords {233.0 304.0}
    labelcoords {232.0 335.0}
    services {DefaultRoute UserDefined}
    interface-peer {eth0 n2}
    custom-config {
	custom-config-id service:UserDefined
	custom-command UserDefined
	config {
	files=('NTPclient.sh', )
	cmdup=('sh NTPclient.sh', )
	starttime=2
	}
    }
    custom-config {
	custom-config-id service:UserDefined:NTPclient.sh
	custom-command NTPclient.sh
	config {
	file:///root/scenario/NTP/scripts/NTPclient.sh
	}
    }
}

node n3 {
    type router
    model host
    network-config {
	hostname n3
	!
	interface eth0
	 ip address 10.0.0.10/24
	!
    }
    canvas c1
    iconcoords {696.0 306.0}
    labelcoords {696.0 338.0}
    custom-config {
	custom-config-id service:UserDefined
	custom-command UserDefined
	config {
	files=('NTPserver.sh', )
	startidx=80
	cmdup=('sh NTPserver.sh', )
	}
    }
    custom-config {
	custom-config-id service:UserDefined:NTPserver.sh
	custom-command NTPserver.sh
	config {
	file:///root/scenario/NTP/scripts/NTPserver.sh
	}
    }
    services {DefaultRoute UserDefined}
    interface-peer {eth0 n2}
}

node n2 {
    type lanswitch
    network-config {
	hostname n2
	!
    }
    canvas c1
    iconcoords {454.0 202.0}
    labelcoords {454.0 226.0}
    interface-peer {e0 n1}
    interface-peer {e1 n3}
}

link l1 {
    nodes {n1 n2}
    bandwidth 0
}

link l2 {
    nodes {n2 n3}
    bandwidth 0
}

canvas c1 {
    name {Canvas1}
}

option global {
    interface_names no
    ip_addresses yes
    ipv6_addresses yes
    node_labels yes
    link_labels yes
    show_api no
    background_images no
    annotations yes
    grid yes
    traffic_start 0
}

option session {
}

